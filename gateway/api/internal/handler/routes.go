// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	authorization "github.com/Guvanchhojamov/gozero-app/gateway/api/internal/handler/authorization"
	orders "github.com/Guvanchhojamov/gozero-app/gateway/api/internal/handler/orders"
	products "github.com/Guvanchhojamov/gozero-app/gateway/api/internal/handler/products"
	"github.com/Guvanchhojamov/gozero-app/gateway/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.HeaderValidationMiddleware, serverCtx.IsAdminValidateMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/signUp",
					Handler: authorization.SignUpHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1/auth"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/signIn",
				Handler: authorization.SignInHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1/auth"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.HeaderValidationMiddleware, serverCtx.RolePermissionMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/orders",
					Handler: orders.GetOrdersHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.HeaderValidationMiddleware, serverCtx.RolePermissionMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodDelete,
					Path:    "/product/:productId",
					Handler: products.DeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/product/:productId",
					Handler: products.GetByIdHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/product/create",
					Handler: products.CreateHandler(serverCtx),
				},
				{
					Method:  http.MethodPatch,
					Path:    "/product/update",
					Handler: products.UpdateHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/products",
					Handler: products.GetProductsHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1"),
	)
}
