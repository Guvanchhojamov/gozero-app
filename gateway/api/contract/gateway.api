syntax = "v1"

import (
	"base.api"
	"request_model.api"
)

@server (
	group:      authorization
	prefix:     /v1/auth
	middleware: HeaderValidationMiddleware,IsAdminValidateMiddleware
)
service appServerApi {
	@doc "Auth routes"
	@handler SignUp
	post /signUp (signUpReq) returns (signUpResp)
}

@server (
	group:  authorization
	prefix: /v1/auth
)
service appServerApi {
	@handler SignIn
	post /signIn (signInReq) returns (signInResp)
}

@server (
	group:      products
	prefix:     /v1
	middleware: HeaderValidationMiddleware,RolePermissionMiddleware
)
service appServerApi {
	@doc "Products routes"
	@handler Create
	post /product/create (createProductReq) returns (createProductResp)

	@doc "Update Product"
	@handler Update
	patch /product/update (updateProductReq) returns (updateProductResp)

	@doc "Delete Product"
	@handler Delete
	delete /product/:productId (deleteProductReq) returns (deleteProductResp)

	@doc "Product GetById"
	@handler GetById
	get /product/:productId (getProductByIdReq) returns (getProductByIdResp)

	@doc "Get All Products"
	@handler GetProducts
	get /products (getProductsReq) returns (getProductsResp)
}

@server (
	group:      orders
	prefix:     /v1
	middleware: HeaderValidationMiddleware,RolePermissionMiddleware
)
service appServerApi {
	@doc "Orders routes"
	@handler GetOrders
	get /orders (getOrdersReq) returns (getOrdersResp)

	@doc "GetById"
	@handler GetOrderById
	get /orders/:orderId (getOrderByIdReq) returns (getOrderByIdResp)

	@doc "CreateOrder"
	@handler CreateOrder
	post /order/create (createOrderReq) returns (createOrderResp)

	@doc "UpdateOrder"
	@handler UpdateOrder
	patch /order/update (updateOrderReq) returns (updateOrderResp)

	@doc "DeleteOrder"
	@handler DeleteOrder
	delete /order/:orderId (deleteOrderReq) returns (deleteOrderResp)
}

