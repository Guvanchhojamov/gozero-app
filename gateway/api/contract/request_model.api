syntax = "v1"

import "base.api"

// Auth
type (
	signUpReq {
		Login    string `json:"login"`
		RoleId   uint32 `json:"roleId"`
		Password string `json:"password"`
	}
	signUpResp {
		UserId uint32 `json:"userId"`
	}
	signInReq {
		Login    string `json:"login"`
		Password string `json:"password"`
	}
	signInResp {
		Token string `json:"token"`
	}
)

// Product
type (
	getProductByIdReq {
		ProductId uint32 `path:"productId"`
	}
	getProductByIdResp {
		Product Product `json:"product"`
	}
	createProductReq {
		Name  string  `json:"name"`
		Price float32 `json:"price"`
	}
	createProductResp {
		ProductId uint32 `json:"productId"`
	}
	updateProductReq {
		Id uint32 `json:"id"`
		Name  string  `json:"name,optional"`
		Price float32 `json:"price,optional"`
	}
	updateProductResp {
		ProductId uint32 `json:"productId"`
	}
	deleteProductReq {
		ProductId uint32 `path:"productId"`
	}
	deleteProductResp {
		StatusCode uint32 `json:"statusCode"`
		Message    string `json:"message"`
	}
	getProductsReq  {}
	getProductsResp {
		Products []Product `json:"products"`
	}
)

// Order
type (
	getOrdersReq  {}
	getOrdersResp {
		Orders []Order `json:"orders"`
	}
	createOrderReq {
		UserId    uint32 `json:"userId"`
		ProductId uint32 `json:"productId"`
		Price float32 `json:"price"`
	}
	createOrderResp {
		OrderId uint32 `json:"orderId"`
	}

	getOrderByIdReq{
		OrderId uint32 `path:"orderId"`
	}
	getOrderByIdResp{
		Id uint32 `json:"id"`
		User UserOrder `json:"user"`
		Product Product `json:"product"`
		Price float32 `json:"price"`
	}

	updateOrderReq{
		Id        uint32 `json:"id"`
		UserId    uint32 `json:"userId"`
		ProductId uint32 `json:"productId"`
		Price float32 `json:"price"`
	}
	updateOrderResp{
		orderId uint32 `json:"orderId"`
	}

	deleteOrderReq{
		orderId uint32 `path:"orderId"`
	}
	deleteOrderResp{
		StatusCode uint32 `json:"statusCode"`
		Message    string `json:"message"`
	}
)

