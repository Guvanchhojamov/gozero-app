// Code generated by goctl. DO NOT EDIT.
// Source: orders.proto

package orderservice

import (
	"context"

	"github.com/Guvanchhojamov/gozero-app/gateway/services/orders/rpc/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetOrdersRequest  = v1.GetOrdersRequest
	GetOrdersResponse = v1.GetOrdersResponse
	Order             = v1.Order

	OrderService interface {
		GetOrders(ctx context.Context, in *GetOrdersRequest, opts ...grpc.CallOption) (*GetOrdersResponse, error)
	}

	defaultOrderService struct {
		cli zrpc.Client
	}
)

func NewOrderService(cli zrpc.Client) OrderService {
	return &defaultOrderService{
		cli: cli,
	}
}

func (m *defaultOrderService) GetOrders(ctx context.Context, in *GetOrdersRequest, opts ...grpc.CallOption) (*GetOrdersResponse, error) {
	client := v1.NewOrderServiceClient(m.cli.Conn())
	return client.GetOrders(ctx, in, opts...)
}
