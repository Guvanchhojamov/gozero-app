// Code generated by goctl. DO NOT EDIT.
// Source: products.proto

package server

import (
	"context"

	"github.com/Guvanchhojamov/gozero-app/gateway/services/products/rpc/internal/logic"
	"github.com/Guvanchhojamov/gozero-app/gateway/services/products/rpc/internal/svc"
	"github.com/Guvanchhojamov/gozero-app/gateway/services/products/rpc/v1"
)

type ProductServiceServer struct {
	svcCtx *svc.ServiceContext
	v1.UnimplementedProductServiceServer
}

func NewProductServiceServer(svcCtx *svc.ServiceContext) *ProductServiceServer {
	return &ProductServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *ProductServiceServer) GetProducts(ctx context.Context, in *v1.GetProductsRequest) (*v1.GetProductsResponse, error) {
	l := logic.NewGetProductsLogic(ctx, s.svcCtx)
	return l.GetProducts(in)
}

func (s *ProductServiceServer) GetProductById(ctx context.Context, in *v1.GetProductByIdRequest) (*v1.GetProductByIdResponse, error) {
	l := logic.NewGetProductByIdLogic(ctx, s.svcCtx)
	return l.GetProductById(in)
}

func (s *ProductServiceServer) CreateProduct(ctx context.Context, in *v1.CreateProductRequest) (*v1.CreateProductResponse, error) {
	l := logic.NewCreateProductLogic(ctx, s.svcCtx)
	return l.CreateProduct(in)
}

func (s *ProductServiceServer) UpdateProduct(ctx context.Context, in *v1.UpdateProductRequest) (*v1.UpdateProductResponse, error) {
	l := logic.NewUpdateProductLogic(ctx, s.svcCtx)
	return l.UpdateProduct(in)
}

func (s *ProductServiceServer) DeleteProduct(ctx context.Context, in *v1.DeleteProductRequest) (*v1.DeleteProductResponse, error) {
	l := logic.NewDeleteProductLogic(ctx, s.svcCtx)
	return l.DeleteProduct(in)
}
